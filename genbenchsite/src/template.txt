[site]
; This section is used to define the website configuration
name = NameWebsite
; The name of the website
description =  Description of the website
; this short description will be used in the meta description tag and the main page
social_media= discord,# github,# gitlab,#
; social media links -> (name of the social media,url) and separated by a space
; google_analyse_key = UA-XXXXXXXXX-X
default_task_scale = auto
default_post_task_scale = auto
; default_task_scale and default_post_task_scale can be auto, log or linear
[benchmark]
; This section is used to define the global configuration of the project
default_nb_runs = 1
; if nb_runs is not defined in the config file of the task, this value will be used
default_timeout = 120
; if timeout is not defined in the config file of the task, this value will be used
default_stop_after_x_timeout = 3
; if stop_after_x_timeout is not defined in the config file of the task, this value will be used
debug = False
; if debug is not defined in the config file of the task, this value will be used
|
nb_runs = 5
arguments = 1000,2000,3000,4000,5000
timeout = 60
; timeout in seconds ( does not count the time of the before_task )
before_script = before_task.py
; the script containing the function to run before the task
before_function = before_task
; the function to run before the task
before_task_arguments = {}
; the arguments of the function to run before the task ( as a dictionary )
file_used = filename
; the file used for the task ( inside data )
evaluation_script = evaluation_task
; the script containing the function to run after the task
evaluation_function = evaluation_task
; the function to run after the task
evaluation_arguments = {}
; the arguments of the function to run after the task ( as a dictionary )
evaluation_sort_order = asc 
; the order of the evaluation for ranking the algorithms ( asc or desc )
extra_html_element = <p>Here you can add a html element to the page to display</p>
; if you want to add a html element to the page to display
arguments_description = arguments_description
; the description of the arguments

description = Quick description of the task
; the description of the task
extra_description = Complementary description of the task
; complementary description of the task
task_scale = auto
; the scale of the task graph
post_task_scale = linear
; the scale of the post task graph
task_xlabel = task_xlabel
task_ylabel = task_ylabel
task_title = task_title
task_display = line
post_task_xlabel = xlabel
post_task_ylabel = ylabel
post_task_title = Title
post_task_display = line

active = True
; if the task is active or not ( the benchmark will not run it if it is not active but it will be displayed if there are results)
|
language = python
before_build = pip install --upgrade library
|
description= Short description of the theme
task_order = Task2, Task1, Task3
; to change the order of the tasks
|